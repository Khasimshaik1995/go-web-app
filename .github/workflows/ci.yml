name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "helm/**"
      - "README.md"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print GITHUB_WORKSPACE
        run: echo ${GITHUB_WORKSPACE}    

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test ./...

  #code-quality:
    #needs: [build-and-test]
    #runs-on: ubuntu-latest
    #steps:
    #  - name: Checkout code
     #   uses: actions/checkout@v4

      #- name: Run Golang Lint
       # uses: golangci/golangci-lint-action@v6
        #with:
         #   version: v1.56.2
       
  
  
  sonarqube-analysis-and-quality-check:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print GITHUB_WORKSPACE
        run: echo ${GITHUB_WORKSPACE}  

      
      - name: Sonarqube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          projectBaseDir: /home/runner/work/go-web-app/go-web-app
          args: >
            -Dsonar.organization=niteshops-github-action
            -Dsonar.projectKey=GO-Web-Application
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL
  
        # Optionally you can use the output from the Quality Gate in another step.
        # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
  
  build-docker-img-and-push:     
    needs: sonarqube-analysis-and-quality-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4       
          # Add support for more platforms with QEMU (optional)
          # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3  

      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}  
      
      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}/go-web-app:${{github.run_id}}      
         
  update-image-tag-in-helm-chart:
    runs-on: ubuntu-latest
    needs: build-docker-img-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}

      - name: Update image tag in Helm chart
        run: |
          echo "Updating image tag in Helm chart"
          sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml
          cat helm/go-web-app/values.yaml
          echo "Image tag updated in Helm chart"

      - name: Commit and push changes
        run: |
            git config --global user.email "niteshwayafalkar@gmail.com"
            git config --global user.name "Nitesh Wayafalkar"
            git add helm/go-web-app-chart/values.yaml
            git commit -m "Update tag in Helm chart"
            git push